Understood! Below is the updated implementation that handles both dark and light scenarios with separate files for square backgrounds.

Updated onFocusChange Function:

override fun onFocusChange(p0: View?, focus: Boolean) {
    if (focus) {
        // Check for dark or light mode and apply the respective square background
        if (inverted) {
            hab_content_view_root?.setBackgroundResource(R.drawable.background_hab_square_dark)
        } else {
            hab_content_view_root?.setBackgroundResource(R.drawable.background_hab_square_light)
        }

        iv_hab_back?.visibility = View.VISIBLE
        iv_assistant?.visibility = View.INVISIBLE
        divider?.visibility = GONE

        if (inverted) {
            hab_content_view_root?.setBackgroundColor(
                ContextCompat.getColor(
                    this.context,
                    R.color.black
                )
            )
            iv_hab_back?.setColorFilter(ContextCompat.getColor(this.context, R.color.white))
        } else {
            hab_content_view_root?.setBackgroundColor(
                ContextCompat.getColor(
                    this.context,
                    R.color.white
                )
            )
            iv_hab_back?.setColorFilter(ContextCompat.getColor(this.context, R.color.black))
        }

        if (!scope.isActive) {
            scope = CoroutineScope(SupervisorJob() + Dispatchers.Default)
            observerSearch()
        }

        isSearchActive = true
        onSearchListener?.showOrHideOverlay(
            true,
            globalSearchListTemplateModel = initialSearchTemplate()
        )
        searchResultsView?.text?.toString()?.let {
            if (it.isNotEmpty()) {
                performApiCall(it)
            }
        }
    } else {
        // Revert to rounded layout
        if (inverted) {
            hab_content_view_root?.setBackgroundResource(R.drawable.background_hab_dark)
        } else {
            hab_content_view_root?.setBackgroundResource(R.drawable.background_hab_light)
        }

        iv_hab_back?.visibility = View.GONE
        iv_assistant?.visibility = View.VISIBLE
        divider?.visibility = View.VISIBLE
        isSearchActive = false
    }
}


---

New Background XML Files

1. background_hab_square_dark.xml:

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="0dp" />
    <solid android:color="@color/vds_color_background_secondary_dark" />
    <stroke
        android:width="1dp"
        android:color="@color/vds_color_elements_secondary_onlight" />
</shape>

2. background_hab_square_light.xml:

<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <corners android:radius="0dp" />
    <solid android:color="@color/vds_color_palette_white" />
    <stroke
        android:width="1dp"
        android:color="@color/vds_color_interactive_disabled_onlight" />
</shape>


---

Explanation:

1. Dark Mode (inverted == true):

When focused, the background switches to background_hab_square_dark.

On returning, it reverts to background_hab_dark.



2. Light Mode (inverted == false):

When focused, the background switches to background_hab_square_light.

On returning, it reverts to background_hab_light.




Let me know if you need further assistance!

